--RIYA NAGPAL


if exists (select * from sysdatabases where name='AIRLINE')
begin
 -- raiserror('Dropping existing AIRLINE database ....',0,1)
  DROP database AIRLINE;
end

GO
CREATE DATABASE AIRLINE;

GO 
USE AIRLINE

DROP TABLE PILOT ;
DROP TABLE PLANE ;
DROP TABLE FLIGHT ;
DROP TABLE CITY ;

CREATE TABLE CITY(
	CITY_ID    	INT CONSTRAINT PK_CITY_ID PRIMARY KEY,
	CITY_NAME  	VARCHAR(20) NOT NULL);



CREATE TABLE PILOT(
	PILOT_ID   	INT,
	LAST_NAME  	VARCHAR(40) NOT NULL,
	FIRST_NAME 	VARCHAR(40),
	CITY_ID    	INT,
	SALARY     	DECIMAL(7,2),
	CONSTRAINT PK_PILOT_ID 		PRIMARY KEY(PILOT_ID),		
	CONSTRAINT FK_PILOT_CITY_ID 	FOREIGN KEY(CITY_ID)  REFERENCES CITY(CITY_ID),
	CONSTRAINT CK_PILOT_SALARY 	CHECK(SALARY>=5000 AND SALARY<=7500)); 

CREATE TABLE PLANE(
	PLA_ID    	INT,
	PLA_DESC  	VARCHAR(20),
	MAX_PASSENGER	INT,
	CITY_ID		INT,
	CONSTRAINT PK_PLA_ID		  PRIMARY KEY(PLA_ID),
	CONSTRAINT FK_PLANE_CITY_ID	  FOREIGN KEY(CITY_ID) REFERENCES CITY(CITY_ID),
	CONSTRAINT CK_PLANE_MAX_PASSENGER CHECK(MAX_PASSENGER<=500));

CREATE TABLE FLIGHT(
	FLIGHT_ID	INT,
	PILOT_ID	INT,
	PLA_ID		INT,
	CITY_DEP	INT,
	CITY_ARR	INT,
	DEP_TIME	INT,
	ARR_TIME	INT,
	CONSTRAINT PK_FLIGHT_ID		PRIMARY KEY(FLIGHT_ID),
	CONSTRAINT FK_FLIGHT_PILOT_ID	FOREIGN KEY(PILOT_ID) REFERENCES PILOT(PILOT_ID),
	CONSTRAINT FK_FLIGHT_PLA_ID	FOREIGN KEY(PLA_ID) REFERENCES PLANE(PLA_ID),
	CONSTRAINT FK_FLIGHT_CITY_DEP	FOREIGN KEY(CITY_DEP) REFERENCES CITY(CITY_ID),
	CONSTRAINT FK_FLIGHT_CITY_ARR	FOREIGN KEY(CITY_ARR) REFERENCES CITY(CITY_ID),
	CONSTRAINT CK_FLIGHT_DEP_TIME	CHECK(DEP_TIME<ARR_TIME));


INSERT INTO CITY VALUES (100,'OTTAWA');
INSERT INTO CITY VALUES (101,'QUEBEC');
INSERT INTO CITY VALUES (102,'MONTREAL');
INSERT INTO CITY VALUES (103,'TORONTO');
INSERT INTO CITY VALUES (104,'VICTORIA');
INSERT INTO CITY VALUES (105,'EDMONTON');

INSERT INTO PILOT VALUES (1,'FANTASSO','ALBERT',100,7000);
INSERT INTO PILOT VALUES (2,'PETERS','FRANK',101,7000);
INSERT INTO PILOT VALUES (3,'ROSS','PAUL',102,6000);
INSERT INTO PILOT VALUES (4,'MIRANDA','SERGE',100,5800);
INSERT INTO PILOT VALUES (5,'TALADOIRE','GILLES',101,6200);
INSERT INTO PILOT VALUES (6,'BONFILS','GERARD',101,6000);
INSERT INTO PILOT VALUES (7,'LAHRIRE','PHILLIPE',103,5200);
INSERT INTO PILOT VALUES (8,'MARCENAC','PIERRE',102,5800);
INSERT INTO PILOT VALUES (9,'CAVARERO','ERIC',102,6000);
INSERT INTO PILOT VALUES (10,'TAYLOR','ROBERT',100,6800);

INSERT INTO PLANE VALUES (1,'A300',300,102);
INSERT INTO PLANE VALUES (2,'A310',300,102);
INSERT INTO PLANE VALUES (3,'B727',250,100);
INSERT INTO PLANE VALUES (4,'A300',280,103);
INSERT INTO PLANE VALUES (5,'CONCORDE',160,102);
INSERT INTO PLANE VALUES (6,'B747',460,100);
INSERT INTO PLANE VALUES (7,'B727',250,100);
INSERT INTO PLANE VALUES (8,'A310',300,101);
INSERT INTO PLANE VALUES (9,'B737',350,103);
INSERT INTO PLANE VALUES (10,'CONCORDE',160,100);

INSERT INTO FLIGHT VALUES (100,1,1,102,103,1100,1430);
INSERT INTO FLIGHT VALUES (101,1,8,100,103,1700,2000);
INSERT INTO FLIGHT VALUES (102,2,1,101,103,1400,1600);
INSERT INTO FLIGHT VALUES (103,5,3,101,103,1800,2000);
INSERT INTO FLIGHT VALUES (104,9,1,100,102,0645,0730);
INSERT INTO FLIGHT VALUES (105,10,2,103,102,1100,1400);
INSERT INTO FLIGHT VALUES (106,1,4,102,103,0800,1100);
INSERT INTO FLIGHT VALUES (107,8,4,102,100,0715,0800);
INSERT INTO FLIGHT VALUES (108,1,8,104,103,0900,1300);
INSERT INTO FLIGHT VALUES (109,9,2,102,100,1215,1300);
INSERT INTO FLIGHT VALUES (110,4,5,100,103,1500,1800);
INSERT INTO FLIGHT VALUES (111,1,2,103,104,1630,2030);
INSERT INTO FLIGHT VALUES (112,4,5,102,105,1100,1420);
INSERT INTO FLIGHT VALUES (113,3,5,105,100,1500,1800);
INSERT INTO FLIGHT VALUES (114,8,9,100,101,1700,1830);
INSERT INTO FLIGHT VALUES (115,7,5,100,101,1800,1930);




SELECT * FROM PLANE
SELECT * FROM CITY
SELECT * FROM FLIGHT
SELECT * FROM PILOT


--Display the name and the capacity of the AIRBUS planes.
--( Plane’s description that starts with A->AIRBUS,  B->BOEING, 
--C->CONCORDE).  
SELECT PLA_DESC, MAX_PASSENGER FROM PLANE 
	WHERE PLA_DESC LIKE 'A%'

--Display the identifications of the pilots who have more than two flights (>=) departures from Montreal. 
SELECT P.PILOT_ID, COUNT(F.CITY_DEP) AS 'FLIGHTS' FROM FLIGHT F
	JOIN PILOT P ON P.PILOT_ID = F.PILOT_ID
	JOIN CITY C ON C.CITY_ID = F.CITY_DEP
	WHERE C.CITY_NAME = 'MONTREAL'
	GROUP BY P.PILOT_ID 
	HAVING COUNT(F.CITY_DEP) >=2

--Display the planes (plane id, its description, localization(city) and the number 
--of passenger) that are located in OTTAWA and their max passenger is greater than 200(>=) 
--(display the result in the descending order of their max of passenger).   
SELECT PLA_ID, PLA_DESC, MAX_PASSENGER, CITY_NAME FROM PLANE P
	JOIN CITY C ON C.CITY_ID = P.CITY_ID
	WHERE CITY_NAME = 'OTTAWA' AND MAX_PASSENGER >= 200
	ORDER BY MAX_PASSENGER DESC


--Display the pilots (pilot id and name) who perform at least one departure from MONTREAL. 
SELECT DISTINCT P.PILOT_ID, LAST_NAME FROM PILOT P
	JOIN FLIGHT F ON F.PILOT_ID = P.PILOT_ID
	JOIN CITY C ON C.CITY_ID = P.CITY_ID
	WHERE F.CITY_DEP IN
	(SELECT CITY_ID FROM CITY WHERE CITY_NAME = 'MONTREAL')


--Display the pilots (pilot id, name and plane description) who pilot a BOEING.  
SELECT DISTINCT P.PILOT_ID, LAST_NAME, FIRST_NAME, PLA_DESC FROM PILOT P
	JOIN FLIGHT F ON F.PILOT_ID = P.PILOT_ID
	JOIN PLANE PL ON PL.PLA_ID = F.PLA_ID
	WHERE PL.PLA_DESC LIKE 'B%'

--Display the pilots (id and name) who earn the same salary as PETERS’s or LAHRIRE’s salary. (PETER and LAHRIRE are not included).  
SELECT DISTINCT PILOT_ID, LAST_NAME, FIRST_NAME, SALARY FROM PILOT
	WHERE SALARY IN
	(SELECT SALARY FROM PILOT WHERE LAST_NAME = 'PETERS' OR LAST_NAME = 'LAHRIRE')
	AND LAST_NAME != 'PETERS' AND LAST_NAME != 'LAHRIRE'


--Display the pilots (id, name and city name) who live in the same city as the localization city of the AIRBUS. (5 points)
SELECT DISTINCT PILOT_ID, LAST_NAME, FIRST_NAME, CITY_NAME FROM PILOT P
	JOIN CITY C ON C.CITY_ID = P.CITY_ID
	JOIN PLANE PL ON PL.CITY_ID = P.CITY_ID
	WHERE PLA_DESC LIKE 'A%'

--Display the planes (description and maximum of passenger) that their max passenger is
--greater (>) than the max passenger of all planes located in Montreal.   
SELECT PLA_DESC, MAX_PASSENGER FROM PLANE 
	WHERE MAX_PASSENGER > 
	(
	SELECT MAX(MAX_PASSENGER) FROM PLANE P
	JOIN CITY C ON C.CITY_ID=P.CITY_ID
	WHERE CITY_NAME = 'MONTREAL'
	)
	

--Display the planes (description and maximum of passenger) where their max passenger is
--greater (>) than at least a max passenger of one plane located in Toronto.		
SELECT PLA_DESC, MAX_PASSENGER FROM PLANE PL
	WHERE EXISTS
	( 
	SELECT * FROM PLANE P
	JOIN CITY C ON C.CITY_ID = P.CITY_ID
	WHERE CITY_NAME = 'TORONTO'
	AND PL.MAX_PASSENGER > P.MAX_PASSENGER
	)

--Display the number of pilots in service (pilot in service are pilots who make at least one flight. 
SELECT  COUNT(DISTINCT(PILOT_ID)) AS 'PILOTS IN SERVICE' FROM FLIGHT 

	
--For each AIRBUS in service during the afternoon, display its description, its id and the 
--departures and arrivals cities.
SELECT  P.PLA_ID AS 'PLANE ID', P.PLA_DESC AS 'PLANE DESCRIPTION', C_DEP.CITY_NAME AS 'DEPART CITY', C_ARR.CITY_NAME AS 'ARRIVAL CITY' 
	FROM PLANE P 
	INNER JOIN FLIGHT F ON F.PLA_ID = P.PLA_ID
	INNER JOIN CITY C_DEP ON C_DEP.CITY_ID = F.CITY_DEP
	INNER JOIN CITY C_ARR ON C_ARR.CITY_ID = F.CITY_ARR
	WHERE P.PLA_DESC LIKE 'A%'
	AND F.DEP_TIME > '1200'
	ORDER BY P.PLA_ID

--Create a view containing the pilots (names) who do not make any flight.  
DROP VIEW PILOT_NAME

CREATE VIEW PILOT_NAME AS
	SELECT P.LAST_NAME, P.FIRST_NAME FROM PILOT P
		WHERE P.PILOT_ID NOT IN 
		(SELECT PILOT_ID FROM FLIGHT)

SELECT * FROM PILOT_NAME
	
--Create a view which returns the pilot’s id, his name, his salary as well as the plane’s description 
--that he pilots. 
DROP VIEW PILOT_INFORMATION

CREATE VIEW PILOT_INFORMATION  AS
	SELECT DISTINCT P.PILOT_ID, LAST_NAME, FIRST_NAME, SALARY, PL.PLA_DESC FROM PILOT P
		JOIN FLIGHT F ON  F.PILOT_ID = P.PILOT_ID
		JOIN PLANE PL ON PL.PLA_ID = F.PLA_ID

SELECT * FROM PILOT_INFORMATION

--Display the pilot’s id and name, his piloting frequency. (piloting frequency is the number of flight). 
DROP VIEW PILOT_COUNT

CREATE VIEW PILOT_COUNT  AS
SELECT  P.PILOT_ID, LAST_NAME, FIRST_NAME, COUNT(F.PILOT_ID) AS COUNT
	FROM FLIGHT F 
	RIGHT JOIN PILOT P ON P.PILOT_ID = F.PILOT_ID
	GROUP BY P.PILOT_ID, LAST_NAME, FIRST_NAME

SELECT * FROM PILOT_COUNT	
	
